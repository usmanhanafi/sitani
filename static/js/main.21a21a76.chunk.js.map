{"version":3,"sources":["component/CardKelas/index.js","component/ModalSaran/index.js","component/TextComponent/index.js","component/Navbar/MenuItems.js","component/Navbar/navIcon.js","component/Navbar/index.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js","component/Button/index.js"],"names":["CardKelas","children","bgImg","mentor","disable","url","kelasTersedia","backgroundCard","mentorCard","disableCard","Tersedia","mentorText","className","data-aos","data-aos-anchor-placement","data-aos-duration","to","ltIE9","src","alt","ModalSaran","handleClose","useState","values","setValues","errors","setErrors","setIsSubmitting","show","setShow","useEffect","isSubmitting","Object","keys","length","swal","title","text","icon","button","timer","handleChange","event","persist","target","name","value","onSubmit","preventDefault","email","test","textarea","validate","class","type","onChange","placeholder","Button","onClick","color","bgcolor","styles","TextComponent","JUDUL","judul","MenuItems","cName","Burger","Close","Navbar","clicked","setClicked","map","item","index","activeClassName","classsName","Home","React","lazy","Hidroponik","Pertanian","Perkebunan","WebPlayer","SectionSaran","Footer","App","modalOpen","setModalOpen","fallback","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","colorClassName","primary","secondary","bgcolorClassName","bgprimary","bgsecondary","stylesClassName","full","outline"],"mappings":"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","file":"static/js/main.21a21a76.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./CardKelas.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Lazy } from 'react-lazy';\r\n\r\nexport const CardKelas = ({\r\n  children,\r\n  bgImg,\r\n  mentor,\r\n  disable,\r\n  url,\r\n  kelasTersedia,\r\n}) => {\r\n  const backgroundCard = bgImg;\r\n  const mentorCard = mentor;\r\n  const disableCard = disable;\r\n  const Tersedia = kelasTersedia;\r\n  // const TersediaText = Tersedia !== \"\";\r\n  const mentorText = mentorCard !== \"\";\r\n  const to = () => {\r\n    if (!disableCard) {\r\n      return url;\r\n    }\r\n  };\r\n  return (\r\n    <Link\r\n      className=\"cardKelas-wrapper\"\r\n      data-aos=\"fade-up\"\r\n      data-aos-anchor-placement=\"bottom-bottom\"\r\n      data-aos-duration=\"1500\"\r\n      to={to}\r\n    >\r\n      <Lazy ltIE9>\r\n      <img src={backgroundCard} alt=\"gambar\" />\r\n      </Lazy>\r\n      <div className={disableCard ? \"bg-disable\" : \"bg-card\"}>\r\n        <h5>{children}</h5>\r\n        {mentorText ? <p className=\"mentor\">Mentor: {mentorCard}</p> : null}\r\n        {disableCard ? (\r\n          <div className=\"disable\">\r\n            <p>Coming Soon</p>\r\n          </div>\r\n        ) : null}\r\n        {Tersedia ? (\r\n          <div className=\"kelas-tersedia-wrapper\">\r\n          <p className=\"kelas-tersedia\">Kelas Tersedia: {Tersedia}</p>\r\n        </div>\r\n        ): null}\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n","import React, {useState, useEffect} from \"react\";\r\nimport { Button } from \"../Button\";\r\nimport \"./Saran.scss\";\r\nimport swal from 'sweetalert';\r\n\r\nexport const ModalSaran = ({ handleClose }) => {\r\n  const [values, setValues] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [show, setShow] = useState(true);\r\n  const validate = (values) => {\r\n    let errors = {};\r\n    if (!values.email) {\r\n      errors.email = \"Email address is required\";\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n      errors.email = \"Email address is invalid\";\r\n    }\r\n    if (!values.textarea) {\r\n      errors.textarea = \"Saran is required\";\r\n    } else if (values.textarea.length < 8) {\r\n      errors.textarea = \"Saran must be 8 or more characters\";\r\n    }\r\n    return errors;\r\n  };\r\n  useEffect((show, isSubmitting) => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      setValues({values: \"\"});\r\n      swal({\r\n        title: \"Berhasil\",\r\n        text: \"Terimakasih telah memberikan saran kepada kami\",\r\n        icon: \"success\",\r\n        button: false,\r\n        timer: 2000\r\n      });\r\n      setShow(!show);\r\n    }\r\n  }, [errors]);\r\n  const handleSubmit = (event) => {\r\n    if (event) event.preventDefault();\r\n    setErrors(validate(values));\r\n    setIsSubmitting(true);\r\n  };\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n  };\r\n  return (\r\n    <div>\r\n      {show && (\r\n        <div className=\"modal-wrapper\">\r\n        <div className=\"container\">\r\n          <div className=\"modal\">\r\n            <form onSubmit={handleSubmit}>\r\n              <i class=\"fas fa-comment-alt\"></i>\r\n              <h5>Yuk berikan pendapatmu untuk pengembangan si tani!</h5>\r\n              <div className=\"form-wrapper\">\r\n                <label className=\"label\">Email:</label>\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  onChange={handleChange}\r\n                  value={values.email || \"\"}\r\n                  placeholder=\"example@sitani.com\"\r\n                />\r\n                {errors.email && <p className=\"is-danger\">{errors.email}</p>}\r\n              </div>\r\n              <div className=\"form-wrapper\">\r\n                <lable className=\"label\">Pendapatmu:</lable>\r\n                <textarea\r\n                  name=\"textarea\"\r\n                  onChange={handleChange}\r\n                  value={values.textarea || \"\"}\r\n                  placeholder=\"web belajar tani milenial\"\r\n                />\r\n                {errors.textarea && <p className=\"is-danger\">{errors.textarea}</p>}\r\n              </div>\r\n              <div className=\"btn-modal\">\r\n                <Button\r\n                  onClick={handleClose}\r\n                  color=\"primary\"\r\n                  bgcolor=\"bgprimary\"\r\n                  styles=\"outline\"\r\n                >\r\n                  Batal\r\n                </Button>\r\n                <Button type=\"submit\" color=\"secondary\" bgcolor=\"bgprimary\">\r\n                  Kirim\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport './TextComponent.scss';\r\n\r\nexport const TextComponent = ({children, judul}) => {\r\n  const JUDUL = judul;\r\n  return (\r\n    <div className=\"textComponent-wrapper\">\r\n      <h4>{JUDUL}</h4>\r\n      <p>{children}</p>\r\n    </div>\r\n  );\r\n};\r\n","export const MenuItems = [\r\n    {\r\n        title: \"Hidroponik\",\r\n        url: '/hidroponik',\r\n        cName: \"nav-links\"\r\n    },\r\n    {\r\n        title: \"Pertanian\",\r\n        url: '/pertanian',\r\n        cName: \"nav-links\"\r\n    },\r\n    {\r\n        title: \"Perkebunan\",\r\n        url: '/perkebunan',\r\n        cName: \"nav-links\"\r\n    },\r\n]","import React from \"react\";\r\nimport \"./Navbar.scss\";\r\n\r\nexport const Burger = () => {\r\n  return (\r\n    <div class=\"burger\">\r\n      <span></span>\r\n      <span></span>\r\n      <span></span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Close = () => {\r\n  return (\r\n    <div class=\"box pointer grid animation\" >\r\n      <div class=\"cross left\"></div>\r\n      <div class=\"cross right\"></div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { MenuItems } from \"./MenuItems\";\r\nimport { Button } from \"../Button\";\r\nimport \"./Navbar.scss\";\r\nimport { Burger, Close } from \"./navIcon\";\r\nimport { Lazy } from 'react-lazy';\r\n\r\nconst Navbar = ({onClick}) => {\r\n  const Logo = \"./assets/logo/logo.svg\";\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  return (\r\n    <nav>\r\n      <div className=\"navbar-wrapper\">\r\n      <Link to=\"/\" className=\"navbar\">\r\n        <Lazy ltIE9>\r\n        <img src={Logo} alt=\"Logo\" />\r\n        </Lazy>\r\n      </Link>\r\n      <div\r\n        className=\"menu-icon\"\r\n        onClick={() => {\r\n          setClicked(!clicked);\r\n        }}\r\n      >\r\n        {clicked ? <Close /> : <Burger />}\r\n      </div>\r\n      <ul className={clicked ? \"nav-menu active\" : \"nav-menu\"}>\r\n        {MenuItems.map((item, index) => {\r\n          return (\r\n            <li key={index}>\r\n              <NavLink  activeClassName=\"selected\" classsName={item.cName} to={item.url}>\r\n                {item.title}\r\n              </NavLink>\r\n            </li>\r\n          );\r\n        })}\r\n        {/* <NavButton >Saran</NavButton> */}\r\n        <Button\r\n          onClick={onClick}\r\n          color=\"primary\"\r\n          bgcolor=\"bgsecondary\"\r\n        >\r\n          Saran\r\n        </Button>\r\n      </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n\r\n","import React, { useState, Suspense  } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { ModalSaran } from \"./component\";\nimport Navbar from \"./component/Navbar\";\n\nconst Home = React.lazy(() => import(\"./container/pages/Home\"));\nconst Hidroponik = React.lazy(() => import(\"./container/pages/Hidroponik\"));\nconst Pertanian = React.lazy(() => import(\"./container/pages/Pertanian\"));\nconst Perkebunan = React.lazy(() => import(\"./container/pages/Perkebunan\"));\nconst WebPlayer = React.lazy(() => import(\"./container/pages/WebPlayer\"));\nconst SectionSaran = React.lazy(() => import(\"./component/SectionSaran\"));\nconst Footer = React.lazy(() => import(\"./component/Footer\"));\n\nconst App = () => {\n  // useEffect(() => {\n  //   const elem = document.getElementById(\"startingLoader\");\n  //   window.onload = () => {\n  //     if (elem) {\n  //       elem.remove();\n  //     }\n  //   };\n  // });\n  const [modalOpen, setModalOpen] = useState(false);\n  const handleClose = () => {setModalOpen(!modalOpen)}\n  return (\n    <BrowserRouter>\n      <div>\n        <Navbar onClick={handleClose} />\n        <Suspense fallback={<div>Loading...</div>}>\n        <main>\n          {modalOpen && (<ModalSaran handleClose={handleClose} />)}\n          <Switch>\n            <Route path=\"/\" component={Home} exact />\n            <Route path=\"/hidroponik\" component={Hidroponik} exact />\n            <Route path=\"/pertanian\" component={Pertanian} exact />\n            <Route path=\"/perkebunan\" component={Perkebunan} exact />\n            <Route path=\"/selada-hidroponik\" component={WebPlayer} exact />\n          </Switch>\n        </main>\n        <SectionSaran onClick={handleClose}/>\n        <Footer />\n        </Suspense>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom/cjs/react-router-dom.min\";\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nserviceWorkerRegistration.register();\n","import React from \"react\";\r\nimport \"./Button.scss\";\r\n\r\nexport const Button = ({ children, onClick, color, bgcolor, styles }) => {\r\n  const BUTTON_COLOR = {\r\n    primary: \"btn-primary\",\r\n    secondary: \"btn-secondary\",\r\n  };\r\n  const BUTTON_BGCOLOR = {\r\n    bgprimary: \"btn-bgprimary\",\r\n    bgsecondary: \"btn-bgsecondary\",\r\n  };\r\n  const BUTTON_STYLES = {\r\n    full: \"btn-full\",\r\n    outline: \"btn-outline\",\r\n  };\r\n  const colorClassName = BUTTON_COLOR[color || \"primary\"];\r\n  const bgcolorClassName = BUTTON_BGCOLOR[bgcolor || \"bgprimary\"];\r\n  const stylesClassName = BUTTON_STYLES[styles || \"full\"];\r\n\r\n  return (\r\n    <button\r\n      className={`btn ${colorClassName} ${bgcolorClassName} ${stylesClassName}`}\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n"],"sourceRoot":""}